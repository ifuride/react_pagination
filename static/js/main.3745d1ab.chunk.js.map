{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","_ref","total","perPage","currentPage","onPageChange","pageQty","Math","ceil","handleArrowButton","page","length","_jsxs","className","children","_jsx","classNames","disabled","href","onClick","map","pageNumber","active","concat","items","App","_useState","useState","_slicedToArray","_useState3","_useState4","itemPerPage","setItemPerPage","_useState5","_useState6","setCurrentPage","firstItem","lastItem","visibleItems","slice","id","value","onChange","event","target","htmlFor","visibleItem","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3745d1ab.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n};\n\nexport const Pagination: React.FC <Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pageQty = getNumbers(1, Math.ceil(total / perPage));\n\n  const handleArrowButton = (page: number) => {\n    if (page >= 1\n      && page <= pageQty.length\n      && currentPage !== page) {\n      onPageChange(page);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={classNames('page-item', {\n        disabled: currentPage === 1,\n      })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={() => handleArrowButton(currentPage - 1)}\n        >\n          «\n        </a>\n      </li>\n      {pageQty.map(pageNumber => (\n        <li\n          key={pageNumber}\n          className={classNames('page-item', {\n            active: pageNumber === currentPage,\n          })}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${pageNumber}`}\n            onClick={() => onPageChange(pageNumber)}\n          >\n            {pageNumber}\n          </a>\n        </li>\n      ))}\n      <li className={classNames('page-item', {\n        disabled: currentPage === pageQty.length,\n      })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === pageQty.length}\n          onClick={() => handleArrowButton(currentPage + 1)}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [total] = useState(42);\n  const [itemPerPage, setItemPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const changePage = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  const firstItem = currentPage * itemPerPage - itemPerPage + 1;\n  const lastItem = currentPage * itemPerPage <= total\n    ? currentPage * itemPerPage\n    : total;\n\n  const visibleItems = items.slice(firstItem - 1, lastItem);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItem} - ${lastItem} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={itemPerPage}\n            onChange={(event) => {\n              setItemPerPage(+event.target.value);\n              setCurrentPage(1);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      {/* Move this markup to Pagination */}\n      <Pagination\n        total={total}\n        perPage={itemPerPage}\n        currentPage={currentPage}\n        onPageChange={changePage}\n      />\n\n      <ul>\n        {visibleItems.map(visibleItem => (\n          <li data-cy=\"item\" key={visibleItem}>\n            {visibleItem}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}